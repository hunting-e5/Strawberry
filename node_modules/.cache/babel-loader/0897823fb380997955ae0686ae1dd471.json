{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tyler\\\\Desktop\\\\strawberry-market\\\\src\\\\components\\\\Tabs\\\\ShowItemTab\\\\ShowItemTab.js\";\n\n/* 물품 선택시 보여지는 화면 */\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport queryString from 'query-string';\nimport './ShowItemTab.css';\nimport ItemImage from './ItemImage';\nimport ItemInfo from './ItemInfo';\n\nclass ShowItemTab extends Component {\n  //나중에 함수 형태로 바꿀 예정. -th\n  constructor(props) {\n    super(props);\n    this.state = {\n      ItemList: []\n    };\n  }\n\n  componentWillMount() {\n    //있어야 하나? -th\n    this._getList();\n  }\n\n  _getList() {\n    const apiUrl = '/data/dummy/ItemList.json'; // 나중에 src/data/dummy/ItemList.json 절대경로로 수정하기\n\n    axios.get(apiUrl).then(data => {\n      //가지고 온 리스트를 저장\n      console.log(apiUrl, \"saved\");\n      this.setState({\n        ItemList: data.data.ItemList\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  render() {\n    var inf = queryString.parse(this.props.location.search); //inf는 querystring을 객체 형태로 표현 -th\n\n    var id = Number(inf.id);\n    var selectedItem = this.state.ItemList.filter(item => item.id === id)[0];\n    return selectedItem !== undefined ? /*#__PURE__*/React.createElement(\"div\", {\n      class: \"showitem_wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"showitem\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ItemImage, {\n      src: selectedItem.src,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(ItemInfo, {\n      item: selectedItem,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }\n    }))) : '';\n  }\n\n}\n\nexport default ShowItemTab;","map":{"version":3,"sources":["C:/Users/tyler/Desktop/strawberry-market/src/components/Tabs/ShowItemTab/ShowItemTab.js"],"names":["React","Component","axios","queryString","ItemImage","ItemInfo","ShowItemTab","constructor","props","state","ItemList","componentWillMount","_getList","apiUrl","get","then","data","console","log","setState","catch","error","render","inf","parse","location","search","id","Number","selectedItem","filter","item","undefined","src"],"mappings":";;AAAA;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAO,mBAAP;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,MAAMC,WAAN,SAA0BL,SAA1B,CAAoC;AAAE;AAClCM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE;AADD,KAAb;AAGH;;AAEDC,EAAAA,kBAAkB,GAAG;AAAE;AACnB,SAAKC,QAAL;AACH;;AAEDA,EAAAA,QAAQ,GAAG;AACP,UAAMC,MAAM,GAAG,2BAAf,CADO,CACqC;;AAC5CX,IAAAA,KAAK,CAACY,GAAN,CAAUD,MAAV,EACKE,IADL,CACUC,IAAI,IAAI;AAAE;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYL,MAAZ,EAAoB,OAApB;AACA,WAAKM,QAAL,CAAc;AACVT,QAAAA,QAAQ,EAAEM,IAAI,CAACA,IAAL,CAAUN;AADV,OAAd;AAGH,KANL,EAOKU,KAPL,CAOWC,KAAK,IAAI;AACZJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACH,KATL;AAUH;;AAEDC,EAAAA,MAAM,GAAG;AACL,QAAIC,GAAG,GAAGpB,WAAW,CAACqB,KAAZ,CAAkB,KAAKhB,KAAL,CAAWiB,QAAX,CAAoBC,MAAtC,CAAV,CADK,CACoD;;AACzD,QAAIC,EAAE,GAAGC,MAAM,CAACL,GAAG,CAACI,EAAL,CAAf;AACA,QAAIE,YAAY,GAAG,KAAKpB,KAAL,CAAWC,QAAX,CAAoBoB,MAApB,CAA2BC,IAAI,IAC9CA,IAAI,CAACJ,EAAL,KAAYA,EADG,EAEhB,CAFgB,CAAnB;AAIA,WACIE,YAAY,KAAKG,SAAjB,gBACA;AAAK,MAAA,KAAK,EAAG,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,KAAK,EAAG,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,SAAD;AAAW,MAAA,GAAG,EAAIH,YAAY,CAACI,GAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI,oBAAC,QAAD;AAAU,MAAA,IAAI,EAAIJ,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ,CADA,GAOE,EARN;AAUH;;AA3C+B;;AA8CpC,eAAevB,WAAf","sourcesContent":["/* 물품 선택시 보여지는 화면 */\r\n\r\nimport React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport queryString from 'query-string'\r\nimport './ShowItemTab.css'\r\nimport ItemImage from './ItemImage';\r\nimport ItemInfo from './ItemInfo';\r\n\r\nclass ShowItemTab extends Component { //나중에 함수 형태로 바꿀 예정. -th\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            ItemList: []\r\n        }\r\n    }\r\n\r\n    componentWillMount() { //있어야 하나? -th\r\n        this._getList();\r\n    }\r\n\r\n    _getList() {\r\n        const apiUrl = '/data/dummy/ItemList.json'; // 나중에 src/data/dummy/ItemList.json 절대경로로 수정하기\r\n        axios.get(apiUrl)\r\n            .then(data => { //가지고 온 리스트를 저장\r\n                console.log(apiUrl, \"saved\");\r\n                this.setState({\r\n                    ItemList: data.data.ItemList\r\n                });\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    render() {\r\n        var inf = queryString.parse(this.props.location.search); //inf는 querystring을 객체 형태로 표현 -th\r\n        var id = Number(inf.id)\r\n        var selectedItem = this.state.ItemList.filter(item => (\r\n            item.id === id\r\n        ))[0]\r\n        \r\n        return (\r\n            selectedItem !== undefined ? \r\n            <div class = 'showitem_wrap'>\r\n                <div class = 'showitem'>\r\n                    <ItemImage src = {selectedItem.src} />\r\n                    <ItemInfo item = {selectedItem} />\r\n                </div>\r\n            </div>\r\n            : ''\r\n        );\r\n    }\r\n}\r\n\r\nexport default ShowItemTab;"]},"metadata":{},"sourceType":"module"}